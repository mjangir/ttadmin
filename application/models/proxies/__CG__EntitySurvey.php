<?php

namespace Proxies\__CG__\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR.
 */
class __CG__EntitySurvey extends \Entity\Survey implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *               three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *               initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var bool flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();

    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {
        $this->__initializer__ = $initializer;
        $this->__cloner__ = $cloner;
    }

    /**
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', ''."\0".'Entity\\Survey'."\0".'id', ''."\0".'Entity\\Survey'."\0".'surveyName', ''."\0".'Entity\\Survey'."\0".'description', ''."\0".'Entity\\Survey'."\0".'surveyPrice', ''."\0".'Entity\\Survey'."\0".'surveyType', ''."\0".'Entity\\Survey'."\0".'forStudent', ''."\0".'Entity\\Survey'."\0".'createdOn', ''."\0".'Entity\\Survey'."\0".'updatedOn', ''."\0".'Entity\\Survey'."\0".'status', ''."\0".'Entity\\Survey'."\0".'createdBy', ''."\0".'Entity\\Survey'."\0".'updatedBy');
        }

        return array('__isInitialized__', ''."\0".'Entity\\Survey'."\0".'id', ''."\0".'Entity\\Survey'."\0".'surveyName', ''."\0".'Entity\\Survey'."\0".'description', ''."\0".'Entity\\Survey'."\0".'surveyPrice', ''."\0".'Entity\\Survey'."\0".'surveyType', ''."\0".'Entity\\Survey'."\0".'forStudent', ''."\0".'Entity\\Survey'."\0".'createdOn', ''."\0".'Entity\\Survey'."\0".'updatedOn', ''."\0".'Entity\\Survey'."\0".'status', ''."\0".'Entity\\Survey'."\0".'createdBy', ''."\0".'Entity\\Survey'."\0".'updatedBy');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if (!$this->__isInitialized__) {
            $this->__initializer__ = function (Survey $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if (!array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };
        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy.
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritdoc}
     *
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritdoc}
     *
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritdoc}
     *
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritdoc}
     *
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritdoc}
     *
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritdoc}
     *
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritdoc}
     *
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    /**
     * {@inheritdoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) parent::getId();
        }

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritdoc}
     */
    public function setSurveyName($surveyName)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSurveyName', array($surveyName));

        return parent::setSurveyName($surveyName);
    }

    /**
     * {@inheritdoc}
     */
    public function getSurveyName()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSurveyName', array());

        return parent::getSurveyName();
    }

    /**
     * {@inheritdoc}
     */
    public function setDescription($description)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritdoc}
     */
    public function getDescription()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritdoc}
     */
    public function setSurveyPrice($surveyPrice)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSurveyPrice', array($surveyPrice));

        return parent::setSurveyPrice($surveyPrice);
    }

    /**
     * {@inheritdoc}
     */
    public function getSurveyPrice()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSurveyPrice', array());

        return parent::getSurveyPrice();
    }

    /**
     * {@inheritdoc}
     */
    public function setSurveyType($surveyType)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSurveyType', array($surveyType));

        return parent::setSurveyType($surveyType);
    }

    /**
     * {@inheritdoc}
     */
    public function getSurveyType()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSurveyType', array());

        return parent::getSurveyType();
    }

    /**
     * {@inheritdoc}
     */
    public function setForStudent($forStudent)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setForStudent', array($forStudent));

        return parent::setForStudent($forStudent);
    }

    /**
     * {@inheritdoc}
     */
    public function getForStudent()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getForStudent', array());

        return parent::getForStudent();
    }

    /**
     * {@inheritdoc}
     */
    public function setCreatedOn($createdOn)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedOn', array($createdOn));

        return parent::setCreatedOn($createdOn);
    }

    /**
     * {@inheritdoc}
     */
    public function getCreatedOn()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedOn', array());

        return parent::getCreatedOn();
    }

    /**
     * {@inheritdoc}
     */
    public function setUpdatedOn($updatedOn)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedOn', array($updatedOn));

        return parent::setUpdatedOn($updatedOn);
    }

    /**
     * {@inheritdoc}
     */
    public function getUpdatedOn()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedOn', array());

        return parent::getUpdatedOn();
    }

    /**
     * {@inheritdoc}
     */
    public function setStatus($status)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritdoc}
     */
    public function getStatus()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritdoc}
     */
    public function setCreatedBy(\Entity\User $createdBy = null)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedBy', array($createdBy));

        return parent::setCreatedBy($createdBy);
    }

    /**
     * {@inheritdoc}
     */
    public function getCreatedBy()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedBy', array());

        return parent::getCreatedBy();
    }

    /**
     * {@inheritdoc}
     */
    public function setUpdatedBy(\Entity\User $updatedBy = null)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedBy', array($updatedBy));

        return parent::setUpdatedBy($updatedBy);
    }

    /**
     * {@inheritdoc}
     */
    public function getUpdatedBy()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedBy', array());

        return parent::getUpdatedBy();
    }
}
