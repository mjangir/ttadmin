<?php

namespace Proxies\__CG__\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR.
 */
class __CG__EntitySoftwareInstallation extends \Entity\SoftwareInstallation implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *               three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *               initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var bool flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];

    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {
        $this->__initializer__ = $initializer;
        $this->__cloner__ = $cloner;
    }

    /**
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', ''."\0".'Entity\\SoftwareInstallation'."\0".'id', ''."\0".'Entity\\SoftwareInstallation'."\0".'installationId', ''."\0".'Entity\\SoftwareInstallation'."\0".'macId', ''."\0".'Entity\\SoftwareInstallation'."\0".'ipAddress', ''."\0".'Entity\\SoftwareInstallation'."\0".'countryId', ''."\0".'Entity\\SoftwareInstallation'."\0".'createdOn', ''."\0".'Entity\\SoftwareInstallation'."\0".'updatedOn', ''."\0".'Entity\\SoftwareInstallation'."\0".'user'];
        }

        return ['__isInitialized__', ''."\0".'Entity\\SoftwareInstallation'."\0".'id', ''."\0".'Entity\\SoftwareInstallation'."\0".'installationId', ''."\0".'Entity\\SoftwareInstallation'."\0".'macId', ''."\0".'Entity\\SoftwareInstallation'."\0".'ipAddress', ''."\0".'Entity\\SoftwareInstallation'."\0".'countryId', ''."\0".'Entity\\SoftwareInstallation'."\0".'createdOn', ''."\0".'Entity\\SoftwareInstallation'."\0".'updatedOn', ''."\0".'Entity\\SoftwareInstallation'."\0".'user'];
    }

    public function __wakeup()
    {
        if (!$this->__isInitialized__) {
            $this->__initializer__ = function (SoftwareInstallation $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if (!array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };
        }
    }

    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy.
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritdoc}
     *
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritdoc}
     *
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritdoc}
     *
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritdoc}
     *
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritdoc}
     *
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritdoc}
     *
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritdoc}
     *
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    /**
     * {@inheritdoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) parent::getId();
        }

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritdoc}
     */
    public function setInstallationId($installationId)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInstallationId', [$installationId]);

        return parent::setInstallationId($installationId);
    }

    /**
     * {@inheritdoc}
     */
    public function getInstallationId()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInstallationId', []);

        return parent::getInstallationId();
    }

    /**
     * {@inheritdoc}
     */
    public function setMacId($macId)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMacId', [$macId]);

        return parent::setMacId($macId);
    }

    /**
     * {@inheritdoc}
     */
    public function getMacId()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMacId', []);

        return parent::getMacId();
    }

    /**
     * {@inheritdoc}
     */
    public function setIpAddress($ipAddress)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIpAddress', [$ipAddress]);

        return parent::setIpAddress($ipAddress);
    }

    /**
     * {@inheritdoc}
     */
    public function getIpAddress()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIpAddress', []);

        return parent::getIpAddress();
    }

    /**
     * {@inheritdoc}
     */
    public function setCountryId($countryId)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCountryId', [$countryId]);

        return parent::setCountryId($countryId);
    }

    /**
     * {@inheritdoc}
     */
    public function getCountryId()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCountryId', []);

        return parent::getCountryId();
    }

    /**
     * {@inheritdoc}
     */
    public function setCreatedOn($createdOn)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedOn', [$createdOn]);

        return parent::setCreatedOn($createdOn);
    }

    /**
     * {@inheritdoc}
     */
    public function getCreatedOn()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedOn', []);

        return parent::getCreatedOn();
    }

    /**
     * {@inheritdoc}
     */
    public function setUpdatedOn($updatedOn)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedOn', [$updatedOn]);

        return parent::setUpdatedOn($updatedOn);
    }

    /**
     * {@inheritdoc}
     */
    public function getUpdatedOn()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedOn', []);

        return parent::getUpdatedOn();
    }

    /**
     * {@inheritdoc}
     */
    public function setUser(\Entity\User $user = null)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritdoc}
     */
    public function getUser()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }
}
